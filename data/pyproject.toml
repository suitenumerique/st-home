[project]
name = "st-home-data"
version = "0.1.0"
description = "Data pipeline for Suite territoriale communes"
requires-python = ">=3.13"
dependencies = [
    "pygrister==0.7.0",
    "requests==2.32.3",
    "celery[redis]==5.5.2",
    "dnspython==2.7.0",
    "sentry-sdk[celery]==2.27.0",
    "psycopg2-binary==2.9.10",
    "pandas==2.2.3",
    "openpyxl==3.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest-cov==6.1.1",
    "flower==2.0.1",
    "watchdog==6.0.0",
    "pytest==8.3.5",
    "certifi==2025.4.26",
    "ruff==0.11.8"
]

[tool.poetry]
package-mode = false

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "build",
    "venv",
    "dumps",
    ".pytest_cache",
    "__pycache__",
    "*/migrations/*",
]
line-length = 99


[tool.ruff.lint]
ignore = ["DJ001", "PLR2004", "S101", "PLR0913", "PLR0911", "BLE001", "S113", "PLR0915", "S602", "PLR0912", "S607"]
select = [
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "DJ",    # flake8-django
    "I",     # isort
    "PLC",   # pylint-convention
    "PLE",   # pylint-error
    "PLR",   # pylint-refactoring
    "PLW",   # pylint-warning
    "RUF100", # Ruff unused-noqa
    "RUF200", # Ruff check pyproject.toml
    "S",     # flake8-bandit
    "SLF",   # flake8-self
    "T20",   # flake8-print
    "F",     # pyflakes
]

[tool.ruff.lint.isort]
section-order = ["future","standard-library","third-party","first-party","local-folder"]
extra-standard-library = ["tomllib"]

[tool.pytest.ini_options]
filterwarnings = "ignore::urllib3.exceptions.InsecureRequestWarning"