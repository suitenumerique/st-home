{
  "name": "suite-territoriale-home",
  "description": "La Suite territoriale - Accueil",
  "version": "0.1.0",
  "private": true,
  "author": "ANCT",
  "license": "MIT",
  "engines": {
    "node": "22"
  },
  "scripts": {
    "predev": "rm -rf .next && npm run only-include-used-icons && node -r @swc-node/register scripts/warm-api.ts &",
    "prebuild": "rm -rf .next && node -r @swc-node/register scripts/prebuild.ts && npm run only-include-used-icons",
    "postinstall": "next telemetry disable",
    "only-include-used-icons": "node node_modules/@codegouvfr/react-dsfr/bin/only-include-used-icons.js",
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "start:local": "dotenv -e .env.local -- next start",
    "prepare": "husky",
    "data:shell": "docker-compose run --rm -e PYTHONPATH=/app/data worker bash",
    "data:sync": "docker-compose run --rm worker python -m tasks.sync",
    "data:sync:local": "dotenv -e .env.local -- docker-compose run --rm worker python -m tasks.sync",
    "data:queue_all": "docker-compose run --rm worker sh -c 'celery -A celery_app call tasks.check_website.queue_all && celery -A celery_app call tasks.check_dns.queue_all'",
    "data:purge": "docker-compose run --rm worker sh -c 'celery -A celery_app purge -Q celery,check_website,check_dns -f'",
    "data:purge:staging": "docker-compose run --rm flower_staging celery -A celery_app purge -Q celery,check_website,check_dns -f",
    "data:purge:production": "docker-compose run --rm flower_production celery -A celery_app purge -Q celery,check_website,check_dns -f",
    "data:historize": "docker-compose run --rm worker python -m tasks.historize",
    "flower:staging": "docker-compose run --rm --service-ports flower_staging",
    "flower:production": "docker-compose run --rm --service-ports flower_production",
    "lint": "npm run lint:front && npm run lint:data",
    "lint:check": "npm run lint:front:check && npm run lint:data:check",
    "lint:front": "prettier --write '**/*.{ts,tsx,css,md,mdx,mjs,js}' --print-width 100 && next lint --no-cache && npm run lint:types",
    "lint:front:check": "prettier '**/*.{ts,tsx,css,md,mdx,mjs,js}' --list-different --print-width 100 && next lint --no-cache && npm run lint:types",
    "lint:data": "docker-compose run -T --rm data_tests sh -c 'ruff check --fix . && ruff format .'",
    "lint:data:check": "docker-compose run -T --rm data_tests sh -c 'ruff check . && ruff format --check .'",
    "lint:types": "tsc --noEmit",
    "seo-check": "node scripts/seo-check.mjs",
    "test": "npm run test:unit && npm run test:e2e",
    "test:unit": "vitest run",
    "test:watch": "vitest watch",
    "test:links": "start-server-and-test 'npm run dev' 3000 'linkinator 'http://localhost:3000' --recurse --skip \"^(?!http://localhost:3000)\"'",
    "test:e2e:install": "playwright install",
    "test:e2e": "playwright test",
    "test:data": "docker-compose run -T --rm data_tests",
    "test:playwright": "NEXT_PUBLIC_BASE_PATH='' NODE_ENV=production npm run build && playwright test",
    "db:reset:local": "npm run db:drop:local && npm run db:push:local && npm run db:seed:local",
    "db:reset:local:sample": "npm run db:drop:local && npm run db:push:local && npm run db:seed:local:sample",
    "db:reset:staging": "npm run db:drop:staging && npm run db:push:staging && npm run db:seed:staging",
    "db:drop:local": "dotenv -e .env.local -- node -r @swc-node/register scripts/db-drop.ts",
    "db:drop:staging": "dotenv -e .env.staging -- node -r @swc-node/register scripts/db-drop.ts",
    "db:browse:local": "dotenv -e .env.local -- drizzle-kit studio",
    "db:browse:staging": "dotenv -e .env.staging -- drizzle-kit studio",
    "db:browse:production": "dotenv -e .env.production -- drizzle-kit studio",
    "db:push:local": "dotenv -e .env.local -- drizzle-kit push",
    "db:push:staging": "dotenv -e .env.staging -- drizzle-kit push",
    "db:seed:sample:local": "dotenv -e .env.local -- node -r @swc-node/register scripts/db-seed.ts ./data/dumps-sample",
    "db:seed:local": "dotenv -e .env.local -- npm run db:seed",
    "db:seed:staging": "dotenv -e .env.staging -- npm run db:seed",
    "db:seed": "node -r @swc-node/register scripts/db-seed.ts ./data/dumps"
  },
  "prettier": {
    "plugins": [
      "prettier-plugin-organize-imports"
    ]
  },
  "dependencies": {
    "@codegouvfr/react-dsfr": "1.20.4",
    "@emotion/react": "^11.14.0",
    "@emotion/server": "^11.11.0",
    "@emotion/styled": "^11.14.0",
    "@mdx-js/loader": "^3.1.0",
    "@mdx-js/react": "^3.1.0",
    "@mui/material": "^6.4.6",
    "@next/mdx": "^15.2.2",
    "@sentry/nextjs": "^8.54.0",
    "@socialgouv/matomo-next": "^1.9.2",
    "@swc-node/register": "^1.10.9",
    "@turf/turf": "^7.2.0",
    "d3": "^7.9.0",
    "debounce": "^2.0.0",
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.41.0",
    "grist-api": "^0.1.7",
    "html-to-text": "^9.0.5",
    "husky": "^9.1.7",
    "is-ci": "^3.0.1",
    "leaflet": "^1.9.4",
    "next": "15.2.5",
    "next-auth": "^4.24.11",
    "next-seo": "^6.6.0",
    "pg": "^8.11.3",
    "rate-limiter-flexible": "^7.0.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-leaflet": "^4.2.1",
    "rehype-raw": "^7.0.0",
    "rehype-slug": "^6.0.0",
    "remark-gfm": "^4.0.0",
    "sharp": "^0.33.5",
    "tss-react": "^4.9.14",
    "unist-util-visit": "^5.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.20.0",
    "@playwright/test": "^1.49.1",
    "@swc/core": "^1.10.12",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/react": "^14.3.1",
    "@types/html-to-text": "^9.0.4",
    "@types/mdx": "^2.0.13",
    "@types/node": "22.10.10",
    "@types/pg": "^8.11.4",
    "@types/react": "18.3.12",
    "@types/react-dom": "18.3.1",
    "@vitejs/plugin-react": "^4.3.4",
    "cheerio": "^1.0.0",
    "dotenv-cli": "^8.0.0",
    "drizzle-kit": "^0.30.5",
    "eslint": "9.20.0",
    "eslint-config-next": "15.1.6",
    "eslint-plugin-jsx-a11y": "6.10.2",
    "jsdom": "^24.1.3",
    "linkinator": "^6.1.2",
    "next-router-mock": "^0.9.13",
    "prettier-plugin-organize-imports": "^4.1.0",
    "start-server-and-test": "2.0.9",
    "typescript": "5.7.3",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.0.9"
  },
  "optionalDependencies": {
    "@rollup/rollup-linux-x64-gnu": "^4.37.0",
    "@swc/core-linux-x64-gnu": "^1.10.12"
  }
}
